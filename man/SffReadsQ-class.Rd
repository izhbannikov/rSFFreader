\name{SffReadsQ-class}
\Rdversion{1.1}
\docType{class}

% Classes
\alias{class:SffReadsQ}
\alias{SffReadsQ-class}
\alias{SffReadsQ}

%Methods
\alias{detail,SffReadsQ-method}
\alias{[,SffReadsQ,ANY,ANY-method}
\alias{[,SffReadsQ,ANY,missing-method}
\alias{[,SffReadsQ,missing,ANY-method}
\alias{[,SffReadsQ,missing,missing-method}
\alias{writeFastaQual,SffReadsQ-method}
\alias{writePhredQual,SffReadsQ-method}
\alias{writePhredQual,FastqQuality-method}
\alias{writeFastq,SffReadsQ,ANY-method}
\alias{quality,ANY-method}
\alias{append,SffReadsQ,SffReadsQ,missing-method}
\alias{quality}
\alias{writeFastaQual}
\alias{writePhredQual}

\title{Class \code{"SffReadsQ"} for next generation reads stored in
SFF files (Roche 454 and Life Sciences Ion Torrent) and their quality scores}

\description{

  SffReadsQ class is a container for storing, next-generation sequencing 
  read data, read id, and sequencing quality information imported directly 
  from SFF files generated by technologies such as Roche 454 and Life 
  Sciences Ion Torrent. This class provides a way to store and manipulate, 
  in a coordinated fashion, next generation reads stored in SFF files, 
  their identifiers and quality scores.

  Objects from this class are the result of \code{\link{readSff}}, or
  can be constructed from \code{DNAStringSet}, \code{QualityScore}, and
  \code{BStringSet} objects, using a call to the
  constructor \code{SffReadsQ}, as described below.
}

\section{Slots}{

  Slot \code{header} is inherited from \code{\linkS4class{SffHeader}}.
  Slots \code{sread}, \code{qualityIR}, \code{adapterIR}, \code{customIR} 
    and \code{clipMode} are inherited from \code{\linkS4class{SffReads}}. 
    An additional slot defined in this class is:
  \describe{
    \item{\code{quality}:}{Object of class \code{"BStringSet"}
      representing a quality score (see \code{\link{readFastq}} for some
      discussion of quality score).}
  }
}
\section{Extends}{
Class \code{"\linkS4class{SffReads}"}, directly.
Class \code{"\linkS4class{SffHeader}"}, by class "SffReads", distance 2.
}
\usage{
## Constructor:

SffReadsQ(sread, quality, qualityIR, adapterIR, customIR, clipMode="raw", header)
}
\arguments{
  \item{sread}{an object of class \code{"\linkS4class{DNAStringSet}"} representing the sequence data.}
  
  \item{quality}{an object of class \code{"\linkS4class{BStringSet}"}, or \code{"\linkS4class{FastqQuality}"} representing
    the quality values associated with the sequence in sread.}

  \item{qualityIR}{an object of type \code{"\linkS4class{IRanges}"} object, specifying the quality clip points.}
  
  \item{adapterIR}{an object of type \code{"\linkS4class{IRanges}"} object, specifying the adapter clip points.}

  \item{customIR}{an object of type \code{"\linkS4class{IRanges}"} object, specifying the user custom clip points.}

## qualityIR, adapterIR, and customIR are allowed to by empty

  \item{clipMode}{a character string specifying the clipping mode to use for the object, see 
    \link{availableClipModes} for more information.}
    
  \item{header}{ a list object with sff header information, see \code{\link{readSffHeader}} for more 
    information.}

}

\section{Methods}{
  \describe{
    \item{quality}{inherited from \code{signature(object = "ANY")}:
      access the quality slot of \code{object}.}
    \item{[}{\code{signature(x = "SffReads", i = "ANY", j = "missing")}:
      This method creates a new \code{SffReads} object containing only
      those reads indexed by \code{i}. Additional methods on
      \sQuote{[,SffReads} do not provide additional functionality, but
      are present to limit appropriate use.}
    \item{writeFastaQual}{\code{signature(object = "SffReadsQ")}: ... }
    \item{writeFastq}{\code{signature(object = "SffReadsQ", file = "character", mode="character", ...)}:
      Write \code{object} to \code{file} in fastq format. \code{mode}
      defaults to \sQuote{w}. This creates a new file, or fails if
      \code{file} already exists. Use \code{mode="a"} to append to an
      existing file. \code{file} is expanded using \code{path.expand}.}
    \item{writePhredQual}{\code{signature(object = "FastqQuality",  filepath, mode="w")}}
    \item{writePhredQual}{\code{signature(object = "SffReadsQ", filepath, mode="w")}:
      Write \code{object}'s  quality values to \code{filepath} in phred qual format (numeric).
      \code{append} defaults to \sQuote{w}. This creates a new file, or fails if \code{filepath} already exists.
      Use \code{mode="a"} to append to an existing file. \code{filepath} is expanded using \code{path.expand}.}
    \item{writeFastaQual}{\code{signature(object = "SffReadsQ", basefilename = "character", append="logical", ...)}:
      Write \code{object} to \code{basefilename} in fasta and phred qual format. \code{append}
      defaults to \sQuote{FALSE}. This creates a new file, or fails if
      \code{basefilename} already exists. Use \code{append=TRUE} to append to an
      existing file. \code{basefilename} is expanded using \code{path.expand} and 
      the suffixes [basefilename].fasta (sequence) and [basefilename].fasta.qual (qualities) are added.}
    \item{append}{\code{signature(x = "SffReadsQ", values = "SffReads", length = "missing")}:
      append the \code{sread}, \code{quality} and \code{id} slots of
      \code{values} after the corresponding fields of \code{x}.}
   }
}

\author{Matt Settles with lots of code 'borrowed' from Martin Morgan's ShortRead Package}

\seealso{

  \code{\link{readSff}} for creation of objects of this class from
  SFF files.

}
\examples{
showClass("SffReadsQ")
showMethods(class="SffReadsQ", where=getNamespace("rSFFreader"),
            inherit=FALSE)
showMethods(class="SffReads", where=getNamespace("rSFFreader"),
            inherit=FALSE)

sff <- readSff(system.file("extdata","Small454Test.sff",package="rSFFreader"))
quality(sff)

}
\keyword{classes}
